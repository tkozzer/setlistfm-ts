# .github/actions/setup-node-pnpm/action.yml
name: Setup Node & pnpm
description: |
  • Installs the requested Node.js version (with pnpm cache)
  • Activates the exact pnpm version via **Corepack**
  • Optionally runs `pnpm install --frozen-lockfile`

inputs:
  node-version:
    description: Node.js version (e.g. `20.x`, `22.x`)
    required: true
  pnpm-version:
    description: pnpm version to activate with Corepack
    required: false
    default: 10.11.1
  run-install:
    description: 'Set to `"true"` to run `pnpm install --frozen-lockfile`'
    required: false
    default: "true"

runs:
  using: composite
  steps:
    # ────────────────────────────────────────────────────────────────
    # 1. Node.js + pnpm cache
    # ────────────────────────────────────────────────────────────────
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: pnpm

    # ────────────────────────────────────────────────────────────────
    # 2. Exact pnpm via Corepack  ➜  adds it to the PATH
    # ────────────────────────────────────────────────────────────────
    - name: Enable Corepack & activate pnpm
      shell: bash
      run: |
        set -e
        corepack enable
        corepack prepare "pnpm@${{ inputs.pnpm-version }}" --activate
        if ! command -v pnpm >/dev/null 2>&1; then
          echo "pnpm not found after Corepack activation, installing globally..."
          npm install -g pnpm@${{ inputs.pnpm-version }}"
        fi
        pnpm --version

    # ────────────────────────────────────────────────────────────────
    # 3. (Optional) install dependencies
    # ────────────────────────────────────────────────────────────────
    - name: Install dependencies
      if: inputs.run-install == 'true'
      shell: bash
      run: pnpm install --frozen-lockfile
