# .github/workflows/ci.yml
name: 🔄 CI

on:
  pull_request:
    branches: [preview, main]
  schedule:
    - cron: "0 2 * * *" # nightly at 02 UTC

# Cancel stale runs on PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

# ##############################################################################
#  🚀 Quick checks – lint, type‑check, fast unit tests (Node 22, Linux)
# ##############################################################################
jobs:
  quick-checks:
    name: 🚀 Quick Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      # Re‑use the central “setup Node & pnpm” workflow
      - uses: .github/workflows/.reuse/setup-node-pnpm.yml
        with:
          node-version: 22.x

      # Fast sanity checks
      - run: pnpm lint
      - run: pnpm type-check
      - run: pnpm vitest run src/

  # ##############################################################################
  #  🧪 Test matrix – multi‑OS / multi‑Node
  # ##############################################################################
  test-matrix:
    name: 🧪 Test (${{ matrix.node }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs: quick-checks

    strategy:
      fail-fast: false
      matrix:
        node: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          - os: windows-latest
            node: 18.x
          - os: macos-latest
            node: 18.x

    steps:
      - uses: actions/checkout@v4
      - uses: .github/workflows/.reuse/setup-node-pnpm.yml
        with:
          node-version: ${{ matrix.node }}

      - run: pnpm vitest run src/
      - run: pnpm type-check

  # ##############################################################################
  #  📊 Coverage job (Node 22, Linux)
  # ##############################################################################
  coverage:
    name: 📊 Coverage & Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quick-checks

    steps:
      - uses: actions/checkout@v4
      - uses: .github/workflows/.reuse/setup-node-pnpm.yml
        with:
          node-version: 22.x

      # Emit a JSON summary so the follow‑up step never 404s
      - run: pnpm vitest run --coverage --coverage.reporter=json-summary src/

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: 📊 Coverage Summary
        run: |
          echo '## 📊 Coverage Summary' >> "$GITHUB_STEP_SUMMARY"
          echo 'Reports uploaded as artifact.' >> "$GITHUB_STEP_SUMMARY"
          if [ -f coverage/coverage-summary.json ]; then
            echo '```json' >> "$GITHUB_STEP_SUMMARY"
            cat coverage/coverage-summary.json >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
          fi

  # ##############################################################################
  #  🏗️ Build verification (Node 22, Linux)
  # ##############################################################################
  build-verification:
    name: 🏗️ Build Verification
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: quick-checks

    steps:
      - uses: actions/checkout@v4
      - uses: .github/workflows/.reuse/setup-node-pnpm.yml
        with:
          node-version: 22.x

      - run: pnpm build:all
      - run: pnpm vitest run tests/
      - run: pnpm build:analyze

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

      - name: 🏗️ Build Summary
        run: |
          echo '## 🏗️ Build Summary' >> "$GITHUB_STEP_SUMMARY"
          ls -la dist/               >> "$GITHUB_STEP_SUMMARY"

  # ##############################################################################
  #  ✅ Success gate – block merge if any job failed
  # ##############################################################################
  ci-success:
    name: ✅ CI Success
    runs-on: ubuntu-latest
    if: always()
    needs:
      - quick-checks
      - test-matrix
      - coverage
      - build-verification

    steps:
      - name: Final status check
        run: |
          for job in quick-checks test-matrix coverage build-verification; do
            result="${{ needs[job].result }}"
            [ "$result" != success ] && { echo "❌ $job failed"; exit 1; }
          done
          echo '✅ All CI jobs completed successfully!' > "$GITHUB_STEP_SUMMARY"
